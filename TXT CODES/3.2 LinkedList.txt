class LinkedList2{
class Node{
int data;
Node next;
Node(int d){
data = d;
next = null;
}
}

Node  head = null;
Node tail = null;
int size = 0;
int i = 0;

void insertAtFirst(int val){
Node n = new Node(val);
if(head==null){
head = n;
tail = n;
}
else{
n.next = head;
head = n;
}
size++;
}

void insertAtLast(int val){
Node n = new Node(val);
if(head==null){
head = n;
tail = n;
}
else{
tail.next = n;
tail = n;
}
size++;
}

void deleteFromLast(){
if(head==null){
System.out.println("List is Empty!!!");
}
else{
Node current = head;
while(current.next!= tail){
current = current.next;
}
current.next = null;
tail = current;
size--;
}
}

void traverse(){
Node current = head;
while(current!=null){
System.out.print(current.data + "->");
current = current.next;
}
System.out.println("");
}

void search(int val){
int loc =-1;
i =0;
if(head==null){
System.out.println("List is Empty!!!");
}
else{
Node current = head;
while(current!=null){
if(current.data == val){
loc = i;
break;
}
current = current.next;
i++;
}

if(loc ==-1){
System.out.println("Value not found!");
}
else{
System.out.println("Val found at index: " + loc);
}
}
}

void length(){
System.out.print("The length of this list is:" + size);
}

public static void main(String[] a){
LinkedList list = new LinkedList();
list.insertAtFirst(23);
list.traverse();
list.insertAtLast(43);
list.traverse();
list.insertAtLast(11);
list.traverse();
list.insertAtLast(55);
list.traverse();
list.deleteFromLast();
list.traverse();
list.search(11);
list.length();
}
}